<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiaose.competitionmanagementsystem.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.qiaose.competitionmanagementsystem.entity.User">
    <!--@mbg.generated-->
    <!--@Table `user`-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="verification_time" jdbcType="TIMESTAMP" property="verificationTime" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="avatarUrl" jdbcType="VARCHAR" property="avatarurl" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="stu_id" jdbcType="VARCHAR" property="stuId" />
    <result column="tea_id" jdbcType="VARCHAR" property="teaId" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="manage_id" jdbcType="VARCHAR" property="manageId" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, account_name, create_time, updated_time, open_id, verification_time, telephone, 
    email, avatarUrl, `password`, stu_id, tea_id, role_id, manage_id, integral
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from `user`
    where id = #{id,jdbcType=INTEGER}
  </select>



  <select id="selectByAccountName" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from `user`
    where account_name = #{name,jdbcType=INTEGER}
  </select>


  <select id="selectByAll"  resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from `user`
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from `user`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.qiaose.competitionmanagementsystem.entity.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `user` (account_name, create_time, updated_time, 
      open_id, verification_time, telephone, 
      email, avatarUrl, `password`, 
      stu_id, tea_id, role_id, 
      manage_id, integral)
    values (#{accountName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{openId,jdbcType=VARCHAR}, #{verificationTime,jdbcType=TIMESTAMP}, #{telephone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{avatarurl,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{stuId,jdbcType=VARCHAR}, #{teaId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, 
      #{manageId,jdbcType=VARCHAR}, #{integral,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.qiaose.competitionmanagementsystem.entity.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountName != null">
        account_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="verificationTime != null">
        verification_time,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="avatarurl != null">
        avatarUrl,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="teaId != null">
        tea_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="manageId != null">
        manage_id,
      </if>
      <if test="integral != null">
        integral,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="verificationTime != null">
        #{verificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatarurl != null">
        #{avatarurl,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="teaId != null">
        #{teaId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="manageId != null">
        #{manageId,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiaose.competitionmanagementsystem.entity.User">
    <!--@mbg.generated-->
    update `user`
    <set>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="verificationTime != null">
        verification_time = #{verificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatarurl != null">
        avatarUrl = #{avatarurl,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="teaId != null">
        tea_id = #{teaId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="manageId != null">
        manage_id = #{manageId,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiaose.competitionmanagementsystem.entity.User">
    <!--@mbg.generated-->
    update `user`
    set account_name = #{accountName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      open_id = #{openId,jdbcType=VARCHAR},
      verification_time = #{verificationTime,jdbcType=TIMESTAMP},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      avatarUrl = #{avatarurl,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      stu_id = #{stuId,jdbcType=VARCHAR},
      tea_id = #{teaId,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR},
      manage_id = #{manageId,jdbcType=VARCHAR},
      integral = #{integral,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>