<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiaose.competitionmanagementsystem.mapper.CompetitionBonusMapper">
  <resultMap id="BaseResultMap" type="com.qiaose.competitionmanagementsystem.entity.CompetitionBonus">
    <!--@mbg.generated-->
    <!--@Table competition_bonus-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="card_id" jdbcType="INTEGER" property="cardId" />
    <result column="open_bank" jdbcType="VARCHAR" property="openBank" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="should_send" jdbcType="DOUBLE" property="shouldSend" />
    <result column="real_send" jdbcType="DOUBLE" property="realSend" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="info_id" jdbcType="INTEGER" property="infoId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, card_id, open_bank, description, should_send, real_send, create_time, update_time, 
    user_id, info_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from competition_bonus
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByUserIdAndInfoId" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from competition_bonus
    where user_id = #{userId,jdbcType=VARCHAR}
    and info_id = #{infoId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from competition_bonus
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.qiaose.competitionmanagementsystem.entity.CompetitionBonus" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into competition_bonus (card_id, open_bank, description, 
      should_send, real_send, create_time, 
      update_time, user_id, info_id
      )
    values (#{cardId,jdbcType=INTEGER}, #{openBank,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{shouldSend,jdbcType=DOUBLE}, #{realSend,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=VARCHAR}, #{infoId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.qiaose.competitionmanagementsystem.entity.CompetitionBonus" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into competition_bonus
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cardId != null">
        card_id,
      </if>
      <if test="openBank != null">
        open_bank,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="shouldSend != null">
        should_send,
      </if>
      <if test="realSend != null">
        real_send,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="infoId != null">
        info_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cardId != null">
        #{cardId,jdbcType=INTEGER},
      </if>
      <if test="openBank != null">
        #{openBank,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="shouldSend != null">
        #{shouldSend,jdbcType=DOUBLE},
      </if>
      <if test="realSend != null">
        #{realSend,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="infoId != null">
        #{infoId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiaose.competitionmanagementsystem.entity.CompetitionBonus">
    <!--@mbg.generated-->
    update competition_bonus
    <set>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=INTEGER},
      </if>
      <if test="openBank != null">
        open_bank = #{openBank,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="shouldSend != null">
        should_send = #{shouldSend,jdbcType=DOUBLE},
      </if>
      <if test="realSend != null">
        real_send = #{realSend,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="infoId != null">
        info_id = #{infoId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiaose.competitionmanagementsystem.entity.CompetitionBonus">
    <!--@mbg.generated-->
    update competition_bonus
    set card_id = #{cardId,jdbcType=INTEGER},
      open_bank = #{openBank,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      should_send = #{shouldSend,jdbcType=DOUBLE},
      real_send = #{realSend,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=VARCHAR},
      info_id = #{infoId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>